name: Terraform

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_KEY }}
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  plan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Checkout Action  
        uses: actions/checkout@v2
        with:
          repository: thinknyx-technologies-llp/provision-action
          token: ${{ secrets.REPO_TOKEN }}
          path: ./action
      - name: Checkout Opa  
        uses: actions/checkout@v2
        with:
          repository: darshan-thinknyx/opa
          token: ${{ secrets.REPO_TOKEN }}
          path: ./opacheck
      - name: Docker Login & Pull Image
        run: echo  ${{ secrets.REPO_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin && docker pull ghcr.io/thinknyx-technologies-llp/provision-action:v11
      - name: Terraform Init
        uses: ./action/
        with:
          operation: terraform
          command: init
          working_directory: terraform/
      - name: Terraform Plan
        uses: ./action/
        with:
          operation: terraform
          command: plan
          working_directory: terraform/
          arguments: -out build.tfplan
      - name: Terraform Show
        uses: ./action/
        with:
          operation: terraform
          command: show
          working_directory: terraform/
          arguments: -json build.tfplan
          output_file: build_terraform.json
      - name: move
        run: ls terraform && ls -ll
#      - name: Install OPA
#        run: curl -L -o opa https://openpolicyagent.org/downloads/v0.35.0/opa_linux_amd64_static && chmod 755 opa && mv opa /usr/local/bin/
#      - name: Opa Check
#        run: opa eval -d opacheck/common.rego -d opacheck/ec2.rego -i build_terraform.json "data.terraform"
      - name: Opa Check
        uses: ./action/
        with:
          operation: mv
          command: build_terraform.json
          arguments: opacheck/
      - name: ls
        uses: ./action/
        with:
          operation: ls
          command: -ll
          working_directory: opacheck/
      - name: Opa Check
        uses: ./action/
        with:
          operation: opa
          command: eval
          arguments: -d . -i build_terraform.json "data.terraform"
          working_directory: opacheck/
